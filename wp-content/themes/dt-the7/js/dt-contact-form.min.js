jQuery(function ($) {
	var noopCaptcha = {
		render: function renderCaptchaNoop() {},
		getResponse: function getCaptchaResponseNoop() {
			return true;
		},
		reset: function resetCaptchaNoop() {}
	};

	function GoogleCaptcha(siteKey, element) {
		this.sitekey = siteKey;
		this.element = element;
		this.captchaObj = null;
	}

	function showPrompt($form, message, type) {
		$form
			.find('input[type="hidden"]')
			.last()
			.validationEngine('showPrompt', message, type, 'inline');
	}

	var PRODUCTION_HOSTS = ['knp-law.co.kr', 'www.knp-law.co.kr'];
	var CANONICAL_BACKEND = window.KNPLAW_FORMS_ORIGIN || 'https://knp-law.co.kr';

	/**
	 * Force static deployments to use the live WordPress backend so that AJAX form
	 * submissions do not hit a missing `/wp-json` endpoint on the static host.
	 */
	function normalizeBaseUrl(rawUrl) {
		if (!rawUrl) {
			return rawUrl;
		}

		var trimmed = String(rawUrl).trim();
		if (!trimmed) {
			return trimmed;
		}

		var hostLower = (window.location.hostname || '').toLowerCase();
		var isProductionHost = PRODUCTION_HOSTS.indexOf(hostLower) !== -1;
		var currentOrigin =
			window.location.origin ||
			(window.location.protocol ? window.location.protocol + '//' + window.location.host : CANONICAL_BACKEND);
		var baseOrigin = isProductionHost ? currentOrigin : CANONICAL_BACKEND;

		try {
			return new URL(trimmed, baseOrigin).toString().replace(/\/+$/, '');
		} catch (error) {
			return trimmed;
		}
	}

	if (window.dtLocal) {
		if (window.dtLocal.REST && window.dtLocal.REST.baseUrl) {
			window.dtLocal.REST.baseUrl = normalizeBaseUrl(window.dtLocal.REST.baseUrl);
		}

		if (window.dtLocal.ajaxurl) {
			window.dtLocal.ajaxurl = normalizeBaseUrl(window.dtLocal.ajaxurl);
		}
	}

	GoogleCaptcha.prototype.render = function renderCaptcha() {
		var instance = this;
		grecaptcha.ready(function onReady() {
			instance.captchaObj = grecaptcha.render(instance.element, {
				sitekey: instance.sitekey
			});
		});
	};

	GoogleCaptcha.prototype.getResponse = function getCaptchaResponse() {
		return grecaptcha.getResponse(this.captchaObj);
	};

	GoogleCaptcha.prototype.reset = function resetCaptcha() {
		grecaptcha.reset(this.captchaObj);
	};

	$.fn.dtInitContactForm = function dtInitContactForm() {
		return this.each(function initForm() {
			var $form = $(this);
			var closeTimeoutId = null;

			var privacyMessage = $form.hasClass('privacy-form')
				? '<p class="dt-privacy-message">' + dtLocal.contactMessages.terms + '<p>'
				: '';

			var captcha = noopCaptcha;
			if (dtLocal.captchaSiteKey) {
				var captchaElement = $form.find('.the7-g-captcha')[0];
				captcha = new GoogleCaptcha(dtLocal.captchaSiteKey, captchaElement);
			}

			captcha.render();

			$form.validationEngine({
				binded: false,
				promptPosition: 'inline',
				scroll: false,
				autoHidePrompt: false,
				maxErrorsPerField: 1,
				custom_error_messages: {
					required: {
						message: dtLocal.contactMessages.required + privacyMessage
					}
				},
				fadeDuration: 500,
				addPromptClass: 'run-animation',
				onAjaxFormComplete: function onAjaxFormComplete() {},
				addSuccessCssClassToField: 'field-success',
				onBeforeAjaxFormValidation: function onBeforeValidation(form) {
					var $currentForm = $(form);
					$currentForm.find('.formError').removeClass('first');
					$currentForm.find('input').removeClass('error-field');
					$currentForm.find('textarea').removeClass('error-field');
				},
				onFailure: function onValidationFailure(form) {
					var $currentForm = $(form);
					if ($currentForm.find('.formError .close-message').length <= 0) {
						$currentForm
							.find('.formError')
							.append(
								'<span class="close-message"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 16 16" style="enable-background:new 0 0 16 16;" xml:space="preserve"><path d="M11.2,3.4L8,6.6L4.8,3.4C4.4,3,3.8,3,3.4,3.4s-0.4,1,0,1.4L6.6,8l-3.2,3.2c-0.4,0.4-0.4,1,0,1.4s1,0.4,1.4,0L8,9.4l3.2,3.2c0.4,0.4,1,0.4,1.4,0c0.4-0.4,0.4-1,0-1.4L9.4,8l3.2-3.2c0.4-0.4,0.4-1,0-1.4C12.2,3,11.6,3,11.2,3.4z"/></svg></span>'
							);
					}
				},
				onValidationComplete: function onValidationComplete(form, isValid) {
					var $currentForm = $(form);

					if ($currentForm.find('.greenPopup').length > 0) {
						$currentForm.find('.greenPopup').remove();
					}

					$currentForm.find('.formError').removeClass('first');
					$currentForm.find('input').removeClass('error-field');
					$currentForm.find('textarea').removeClass('error-field');

					$currentForm.find('.formError').each(function (index, element) {
						$(element).eq(index).addClass('first');
						$(element).prev().addClass('error-field');
					});

					$('.formError .close-message').remove();

					if ($currentForm.find('.formError .close-message').length <= 0) {
						$currentForm
							.find('.formError')
							.append(
								'<span class="close-message"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 16 16" style="enable-background:new 0 0 16 16;" xml:space="preserve"><path d="M11.2,3.4L8,6.6L4.8,3.4C4.4,3,3.8,3,3.4,3.4s-0.4,1,0,1.4L6.6,8l-3.2,3.2c-0.4,0.4-0.4,1,0,1.4s1,0.4,1.4,0L8,9.4l3.2,3.2c0.4,0.4,1,0.4,1.4,0c0.4-0.4,0.4-1,0-1.4L9.4,8l3.2-3.2c0.4-0.4,0.4-1,0-1.4C12.2,3,11.6,3,11.2,3.4z"/></svg></span>'
							);
					}

					if ($currentForm.find('input.the7-form-terms').hasClass('field-success')) {
						$currentForm.find('.dt-privacy-message').addClass('hide-privacy-message');
					}

					if (!isValid) {
						return;
					}

					var captchaToken = captcha.getResponse();
					if (!captchaToken) {
						showPrompt($currentForm, dtLocal.contactMessages.fillTheCaptchaError, 'error');
						return;
					}

					var payload = {
						widget_id: $currentForm.find('input[name="widget_id"]').val(),
						send_message: $currentForm.find('input[name="send_message"]').val(),
						security_token: $currentForm.find('input[name="security_token"]').val(),
						gcaptcha_token: captchaToken,
						fields: {}
					};

					$currentForm.find('input[type="text"], textarea').each(function collectFields() {
						var $input = $(this);
						payload.fields[$input.attr('name')] = $input.val();
					});

					$.post(
						window.dtLocal.REST.baseUrl + window.dtLocal.REST.endpoints.sendMail,
						payload,
						function handleResponse(response) {
							var $formNode = $(form);
							var status = response.success ? 'pass' : 'error';

							showPrompt($formNode, response.errors, status);

							$currentForm.find('.formError').addClass('field-success');
							$formNode.validationEngine('showPrompt', '', '', 'topRight');
							captcha.reset();

							if (!response.success) {
								return;
							}

							$formNode.find('input[type="text"], textarea').val('');
							$formNode.find('input[type="checkbox"]').prop('checked', false);

							if ($currentForm.find('.formError .close-message').length <= 0) {
								$currentForm.find('.formError').append('<span class="close-message"></span>');
								$currentForm.find('.formError .close-message').on('click', function closeMessage() {
									$currentForm.find('.greenPopup').remove();
									clearTimeout(closeTimeoutId);
								});
							}

							clearTimeout(closeTimeoutId);
							closeTimeoutId = setTimeout(function removeSuccessMessage() {
								$currentForm.find('.greenPopup').remove();
							}, 11000);
						}
					);
				}
			});

			$form.find('.dt-btn.dt-btn-submit').on('click', function onSubmitClick(event) {
				event.preventDefault();
				$(this).parents('form').submit();
			});

			$form.find('.clear-form').on('click', function onClearClick(event) {
				event.preventDefault();
				var $currentForm = $(this).parents('form');
				if ($currentForm.length > 0) {
					$currentForm.find('input[type="text"], textarea').val('');
					$currentForm.validationEngine('hide');
				}
			});
		});
	};

	$('form.dt-contact-form.dt-form').dtInitContactForm();
});
